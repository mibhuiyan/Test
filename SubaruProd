package test.java;

import java.util.Date;
import java.util.Random;
import java.util.concurrent.TimeUnit;
import org.apache.commons.io.FileUtils;
import org.junit.AfterClass;
import org.junit.Assert;
import org.junit.BeforeClass;
import org.junit.FixMethodOrder;
import org.junit.Ignore;
import org.junit.runners.MethodSorters;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import static org.junit.Assert.fail;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;

@SuppressWarnings("unused")
@FixMethodOrder(MethodSorters.NAME_ASCENDING)

public class AutoWebAppTest{

static WebDriver _driver, _driver2;
static String resFile="/Users/mbhuiyan/Documents/Selenium/SubaruWorkSpace/SubaruApp/Report/WebAutoReport.xls";
static FileWriter writer;
public static StringBuffer errors = new StringBuffer(); 


@BeforeClass
public static void setUp() throws IOException{
   System.setProperty("webdriver.chrome.driver", "/Users/mbhuiyan/Documents/Selenium/SubaruWorkSpace/Driver/ChormeDriver/chromedriver");
  _driver=new ChromeDriver();
  writer = new FileWriter(resFile);
  writer.append("TCNO,Test Case,Result\n");
}

String baseUrl = "http://auto.iheart.com/auto/2014071414162/api2/index.html";
String SecUrl = "http://www.iheart.com/activate/";

@Test
public void aWebautoBrowser() throws Exception{

   try{  
      writer.append("TC01,WebAuto Launch==============,\n"); 
    
 OpenUrl(_driver, baseUrl);
 writer.append(",WebAutoLaunch test End,Pass\n");  
      
      }
   catch(Exception e){
 String msg=e.getMessage();
 writer.append(",Test Execution, Fail\n"); 
 writer.append(",Test  End==============,\n");
 writer.append("\n\n\n************************** Error Description ***************************\n"+msg);
 System.out.println(_driver.getTitle());
 System.out.println("App Launched with HU Equivalent Build:");
 handleException(e);
 takeScreenshot(_driver, "WebautoBrowser","test.java.AutoWebAppTest");
 Assert.fail("Launch Browser Test Failed");
 } 
}

@Test
public void bTermsCondition() throws Exception{
try{  
writer.append("TC02,Terms and Condition Test Start==============,\n"); 
_driver.switchTo().defaultContent();

_driver.switchTo().frame(_driver.findElement(By.xpath("//iframe[@id='screen']")));
Thread.sleep(1500);
 ClickById(_driver,"agree-eula");
Thread.sleep(500);
ClickById(_driver,"agree-privacy");
Thread.sleep(500);
ClickById(_driver,"agree-data");
Thread.sleep(500);
ClickById(_driver,"agree-location");
Thread.sleep(2000);
ClickById(_driver,"legalContinueButton");
Thread.sleep(2000);
writer.append(",Terms and Condition Test End,Pass\n"); 
  
     }
 catch(Exception e){
 String msg=e.getMessage();
 writer.append(",Test Execution, Fail\n"); 
 writer.append(",Test  End==============,\n");
 writer.append("\n\n\n************************** Error Description ***************************\n"+msg);
 handleException(e);
 takeScreenshot(_driver, "TermsCondition","test.java.AutoWebAppTest");
 Assert.fail("TermsConditions Failed");
 } 
}

@Test
public void cAnonymouseUserLiveStation() throws Exception{

try{  
     writer.append("TC03,Anonymouse user + Live Station Test Start==============,\n"); 
     
ClickById(_driver,"login-prompt-maybe-button"); 
Thread.sleep(5000);
ClickById(_driver,"tnNowPlaying"); 
Thread.sleep(10000);
ClickById(_driver,"livescanbutton"); 
Thread.sleep(5000);
ClickById(_driver,"livescanbutton");
Thread.sleep(2000);
ClickById(_driver,"favorites"); 
Thread.sleep(3000);
writer.append(",Anonymouse user + Live Station Test End,Pass\n");
 }
 catch(Exception e){
 String msg=e.getMessage();
 writer.append(",Test Execution, Fail\n"); 
 writer.append(",Test  End==============,\n");
 writer.append("\n\n\n************************** Error Description ***************************\n"+msg);
 handleException(e);
 takeScreenshot(_driver, "AnonymouseUserLiveStation","test.java.AutoWebAppTest");
 Assert.fail("Anonymoues User + Live Station Test Failed");
 } 
   
   
}

@Test
public void dEmailSignup() throws Exception{
 
 
try{  
     writer.append("TC04,Activation Test Start==============,\n"); 
     ClickByXpath(_driver,"//*[@id='modal']/div[4]/a[1]"); 
Thread.sleep(2000);
 ClickById(_driver,"login-prompt-signup-button");
Thread.sleep(3000);

String activeCode= GetTextAttById(_driver,"activationcode"); 

Thread.sleep(2000);
writer.append(",Anonymouse User Live Station Test End==============,\n"); 
writer.append("TC05,Activation Browser Launch==============,\n"); 
System.out.println(_driver.getTitle());
System.out.println("this is activation code:"+activeCode);
_driver2 =new ChromeDriver();
OpenUrl(_driver2, SecUrl);
System.out.println(_driver2.getTitle());
writer.append(",Activation Browser Done,Pass\n");
writer.append("TC06,Sign Up with Email-- Test Start==============,\n");
      Thread.sleep(3000);
ClickByLinkText(_driver2, "Sign up");
Thread.sleep(2000);
EnterTextByName(_driver2,"userName",CreateEmail());
Thread.sleep(500);
EnterTextByName(_driver2,"password","abcd1234");
Thread.sleep(500);
EnterTextByName(_driver2,"zipCode","11218");
Thread.sleep(500);
_driver2.findElement(By.name("birthYear")).sendKeys("1980");
Thread.sleep(500);
ClickByName(_driver2,"gender");
Thread.sleep(500);
ClickByName(_driver2,"termsAcceptanceDate");
Thread.sleep(2000);
ClickByXpath(_driver2,"//button[@type='submit']");
Thread.sleep(4000);
EnterTextByName(_driver2,"code",activeCode);
Thread.sleep(3000);
//if (findElement(By.xpath("html/body/div[1]/div/div[2]/div[2]/div/p/text()").
if (IsTextPresent(_driver2,"Username already exists.")){
dEmailSignup();
}
Thread.sleep(3000);
ClickByXpath(_driver2,"//button[@type='submit']");
Thread.sleep(1000); // PASS
_driver2.close();
writer.append(",Sign Up with Email-- Test End,Pass\n");
      
}
catch(Exception e){
 String msg=e.getMessage();
 writer.append(",Test Execution, Fail\n"); 
 writer.append(",Test  End==============,\n");
 writer.append("\n\n\n************************** Error Description ***************************\n"+msg);
 handleException(e);
 takeScreenshot(_driver, "EmailSignup","test.java.AutoWebAppTest");
 Assert.fail("EmailSignUp Test Failed");
 } 
}

@Test
public void eSaveLive_Station() throws Exception{

    
      
   try{  
      writer.append("TC07,Save Live Station Test Start==============,\n"); 
      
      Thread.sleep(4000);
ClickByXpath(_driver,"//*[@id='modal']/div[4]/a"); 
Thread.sleep(4000);
   ClickByXpath(_driver,"//*[@id='modal']/div[3]/a"); 
Thread.sleep(1000); 
writer.append(",Save Live Station Test End...,Pass\n");
      }
   
   catch(Exception e){
 String msg=e.getMessage();
 writer.append(",Test Execution, Fail\n"); 
 writer.append(",Test  End==============,\n");
 writer.append("\n\n\n************************** Error Description ***************************\n"+msg);
 handleException(e);
 takeScreenshot(_driver, "SaveLive_Station","test.java.AutoWebAppTest");
 Assert.fail("SaveLive_Station Test Failed");
 }  
}

@Test
public void fCreateStation() throws Exception{  
      
try{  
      writer.append("TC08,Create Station==============,\n"); 
     

ClickById(_driver,"livescanbutton"); 
	Thread.sleep(4000);
ClickById(_driver,"livescanbutton"); 
	Thread.sleep(4000);
ClickById(_driver,"createlivestation"); 
	Thread.sleep(1000);
ClickById(_driver,"play_new_station_button"); 
	Thread.sleep(1000);
writer.append(",Create Station Test End...,Pass\n");
      }
   catch(Exception e){
 String msg=e.getMessage();
 writer.append(",Test Execution, Fail\n"); 
 writer.append(",Test  End==============,\n");
 writer.append("\n\n\n************************** Error Description ***************************\n"+msg);
 handleException(e);
 takeScreenshot(_driver, "CreateStation","test.java.AutoWebAppTest");
 Assert.fail("CreateStation Test Failed");
 } 
   
}

@Test
public void gCustomStation() throws Exception{
   
   try{  
      writer.append("TC09,Custom Station Test Start==============,\n"); 
     
      ClickById(_driver,"tnHome"); 
      	Thread.sleep(2000);
      ClickById(_driver,"create-station"); 
  		Thread.sleep(2000);
  ClickByXpath(_driver,"//*[@id='streamList']/li[1]/a[2]");
  		Thread.sleep(2000);
  ClickById(_driver,"nonswipe-right"); 
  		Thread.sleep(2000);
  ClickByXpath(_driver,"//*[@id='streamList']/li[5]/a"); 
  		Thread.sleep(2000);
  ClickById(_driver,"skipbutton"); 
  		Thread.sleep(2000);
  writer.append(",Custom music Test End ==============,Pass\n");
      }
   catch(Exception e){
 String msg=e.getMessage();
 writer.append(",Test Execution, Fail\n"); 
 writer.append(",Test  End==============,\n");
 writer.append("\n\n\n************************** Error Description ***************************\n"+msg);
 handleException(e);
 takeScreenshot(_driver, "CustomStation","test.java.AutoWebAppTest");
 Assert.fail("CustomStation Test Failed");
 } 
 
   
   
}

@Test
public void hCustomTalkStation() throws Exception{

   try{  
      writer.append("TC10,Custom talk Station Test Start==============,\n"); 
  ClickById(_driver,"tnHome"); 
  Thread.sleep(2000);
  ClickById(_driver,"custom-talk"); 
  Thread.sleep(2000);
  ClickById(_driver,"nonswipe-right");
  Thread.sleep(2000);
  ClickByXpath(_driver,"//*[@id='streamList']/li[8]/a"); 
  Thread.sleep(2000);
  ClickById(_driver,"nonswipe-right");
  Thread.sleep(2000);
  ClickByXpath(_driver,"//*[@id='streamList']/li[8]/a/div[2]"); 
  Thread.sleep(2000);
  ClickById(_driver,"skipbutton");
  Thread.sleep(20000);
  ClickById(_driver,"favorites"); 
  Thread.sleep(2000);
  writer.append(",Custom talk Station Test End,Pass\n");
      
      }
   catch(Exception e){
 String msg=e.getMessage();
 writer.append(",Test Execution, Fail\n"); 
 writer.append(",Test  End==============,\n");
 writer.append("\n\n\n************************** Error Description ***************************\n"+msg);
 handleException(e);
 takeScreenshot(_driver, "CustomTalkStation","test.java.AutoWebAppTest");
 Assert.fail("CustomTalkStation Test Failed");
 } 
 
   
   
}

@Test
public void iLogOut() throws Exception{
      
   try{  
      writer.append("TC11,Log Out Test Start==============,\n"); 

ClickById(_driver,"tnHome"); 
Thread.sleep(2000);
ClickById(_driver,"tnSettings"); 
Thread.sleep(2000);
ClickByXpath(_driver,"//*[@id='streamList']/li[2]/a");
Thread.sleep(2000);
ClickByXpath(_driver,"//*[@id='settings-actBtns']/li[1]/a"); 
Thread.sleep(2000);
ClickById(_driver,"log_out"); 
Thread.sleep(2000);
ClickById(_driver,"tnNowPlaying"); 
Thread.sleep(3000);
writer.append(",Log out Test End ,Pass\n");
      }
   catch(Exception e){
 String msg=e.getMessage();
 writer.append(",Test Execution, Fail\n"); 
 writer.append(",Test  End==============,\n");
 writer.append("\n\n\n************************** Error Description ***************************\n"+msg);
 handleException(e);
 takeScreenshot(_driver, "LogOut","test.java.AutoWebAppTest");
 Assert.fail("LogOut Test Failed");
 } 
 
   
   
}

@Test
public void jEmailLogin() throws Exception{
      
   try{  
      writer.append("TC12,Log In Via Email Test Start==============,\n"); 
      ClickById(_driver,"tnHome"); 
  Thread.sleep(2000);
  ClickById(_driver,"tnSettings"); 
  Thread.sleep(2000);
  ClickByXpath(_driver,"//*[@id='streamList']/li[2]/a"); 
  Thread.sleep(2000);
  ClickByXpath(_driver,"//*[@id='settings-actBtns']/li[1]/a"); 
  Thread.sleep(2000);
  ClickById(_driver,"login-prompt-login-button");
  Thread.sleep(1000);
  EnterTextByName(_driver,"email","webauto773@maillinator.com");
  Thread.sleep(500);
  EnterTextByName(_driver,"password","tester");
  Thread.sleep(500);
  ClickById(_driver,"login-button");
  Thread.sleep(2000);
  ClickById(_driver,"tnNowPlaying"); 
  Thread.sleep(2000);
  writer.append(",Log in,Pass\n");
      }
   
   catch(Exception e){
 String msg=e.getMessage();
 writer.append(",Test Execution, Fail\n"); 
 writer.append(",Test  End==============,\n");
 writer.append("\n\n\n************************** Error Description ***************************\n"+msg);
 handleException(e);
 takeScreenshot(_driver, "EmailLogin","test.java.AutoWebAppTest");
 Assert.fail("EmailLogin Failed");
 } 
 
}

@Ignore
//@Test
public void kFavorite() throws Exception{
      
   try{  
      writer.append("TC13,Favorite Station Test Start==============,\n"); 
  ClickById(_driver,"tnHome"); 
  Thread.sleep(2000);
  ClickById(_driver,"tnFavorites"); 
  Thread.sleep(2000);
  ClickByXpath(_driver,"//*[@id='favoriteList']/li/a[1]/div[1]");
  Thread.sleep(2000);
  ClickById(_driver,"favorites"); 
  Thread.sleep(2000);
  writer.append(",Log in Test End,Pass\n");
      }
   catch(Exception e){
 String msg=e.getMessage();
 writer.append(",Test Execution, Fail\n"); 
 writer.append(",Test  End==============,\n");
 writer.append("\n\n\n************************** Error Description ***************************\n"+msg);
 handleException(e);
 takeScreenshot(_driver, "Favorite","test.java.AutoWebAppTest");
 Assert.fail("Favorite Test Failed");
 } 
    
}

@Test
public void lAppQuit() throws Exception{
try{  
  writer.append("TC14,App Quit Test Start ==============,\n"); 
  ClickById(_driver,"tnQuit"); 
  Thread.sleep(2000);
  ClickByXpath(_driver,"//*[@id='modal']/div[3]/a[1]"); 
  Thread.sleep(4000);
  System.out.println(_driver.getTitle());
  writer.append(",App Quit Test End,Pass\n");
 }
 catch(Exception e){
 String msg=e.getMessage();
 writer.append(",Test Execution, Fail\n"); 
 writer.append(",Test  End==============,\n");
 writer.append("\n\n\n************************** Error Description ***************************\n"+msg);
 handleException(e);
 takeScreenshot(_driver, "AppQuit","test.java.AutoWebAppTest");
 Assert.fail("AppQuit Test Failed");
 } 
}

@Test
public void mWebAutoBrowserClose() throws Exception{
      
   try{  
      writer.append("TC15,Browser Close==============,\n"); 
      Thread.sleep(4000);
   System.out.println(_driver.getTitle());
      _driver.close();
      writer.append(",Browser Close Test End,Pass\n");
      }
   catch(Exception e){
 String msg=e.getMessage();
 writer.append(",Test Execution, Fail\n"); 
 writer.append(",Test  End==============,\n");
 writer.append("\n\n\n************************** Error Description ***************************\n"+msg);
 handleException(e);
 takeScreenshot(_driver, "WebAutoBrowserClose","test.java.AutoWebAppTest");
 Assert.fail("AutoBrowserClose Test Failed");
 } 
 
   
   
}


@AfterClass
public static void tearDown() throws InterruptedException, IOException{
    writer.flush();
    writer.close();
    if (getErrors().length() > 0)
	  {	   
		  //fail(getErrors().toString());
	      System.out.println(getErrors().toString());
	  }
}

public void OpenUrl(WebDriver WD, String vUrl){
WD.get(vUrl);
WD.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
WD.manage().window().maximize();
}

public void ClickById (WebDriver WD, String iD){
WD.findElement(By.id(iD)).click();
}

public void ClickByLinkText (WebDriver WD, String lInkText){
WD.findElement(By.linkText(lInkText)).click();
}

public void EnterTextByName(WebDriver WD, String eleName, String eText){
WD.findElement(By.name(eleName)).clear();
WD.findElement(By.name(eleName)).sendKeys(eText);
}

public void ClickAndWaitByXpath(WebDriver WD, String xPath, Long wTime) throws Exception{
WD.findElement(By.xpath(xPath)).click();
Thread.sleep(wTime);
}

public void ClickByXpath(WebDriver WD, String xPath){
WD.findElement(By.xpath(xPath)).click();
}

public void ClickByName(WebDriver WD, String nAme){
WD.findElement(By.name(nAme)).click();
}

public String GetTextAttByXpath(WebDriver WD, String xPath){
return WD.findElement(By.xpath(xPath)).getAttribute("value");
}

public String GetTextAttById(WebDriver WD, String iD){
return WD.findElement(By.id(iD)).getAttribute("value");
}

public String CreateEmail(){
Random rand = new Random();
String mEmail;
int  n = rand.nextInt(1000000) + 2;
mEmail="subaru"+String.valueOf(n)+"@mailinator.com";
return mEmail;
}

public Boolean IsTextPresent(WebDriver WD, String textToVerify){
try{ 
if (WD.findElement(By.xpath(textToVerify)) != null){
return true;
}
  } catch (Exception e){
      return false;
  }
return false;
}


public static StringBuffer getErrors()
{
	return errors;
}

private void handleException(Exception e)
{   
	getErrors().append("\nException is thrown.");
    e.printStackTrace();
}

public static void takeScreenshot(WebDriver driver, String testMethod, String testClass) throws Exception
{
	 SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy_MM_dd_HH_mm_ss");  
	 Date date = new Date();   
	 String currentPath = System.getProperty("user.dir");   
	 //System.out.println(currentPath);
	 String path = currentPath + "/target/surefire-reports/";    
	 String screenshotName = path + testClass + "/" + testMethod + "/"+ dateFormat.format(date) + ".png";
	 System.out.println("See screenshotName:" + screenshotName);
	 File scrFile = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
	 FileUtils.copyFile(scrFile, new File(screenshotName));
	 System.out.println("Screenshot Taken");
}



}
